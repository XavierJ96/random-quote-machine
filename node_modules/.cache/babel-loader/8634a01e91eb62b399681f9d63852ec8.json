{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Desktop\\\\random-quote-machine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/fontawesome-svg-core';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'; // Get Quotes from json\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quotesDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"; // color array\n\nvar colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', '#472E32', '#BDBB99', '#77B1A9', '#73A857'];\n\nfunction App() {\n  _s();\n\n  // state\n  const [quote, setQuote] = useState(\"If the wind will not serve, take to the oars\");\n  const [author, setAuthor] = useState(\"Latin Proverb\");\n  const [quotesArray, setQuotesArray] = useState(null);\n  const [, setRandomNumber] = useState(0);\n  const [accentColor, setAccentColor] = useState('#282c34'); // async Function to import Quotes from API\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotesArray(parsedJSON.quotes);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quotesDB);\n  }, [quotesDB]); // Function to generate a random number\n  // set the random Integer to the length of quote array\n  // Determine which quote to show with the position being the randomInteger number\n\n  const getQuote = () => {\n    let randomInteger = Math.floor(quotesArray.length * Math.random());\n    let randomColor = Math.floor(colors.length * Math.random());\n    setRandomNumber(randomInteger);\n    setAccentColor(colors[randomColor]);\n    setQuote(quotesArray[randomInteger].quote);\n    setAuthor(quotesArray[randomInteger].author);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        backgroundColor: accentColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        style: {\n          color: accentColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: [\"\\\"\", quote, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"author\",\n          children: [\"-\", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          href: encodeURI(`https://twitter.com/intent/tweet?text=${quote}. -${author}`),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: () => getQuote(),\n          style: {\n            backgroundColor: accentColor\n          },\n          children: \"New Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zv+KQMooIhj/gnT4YZQn7hR6FZI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faTwitter","quotesDB","colors","App","quote","setQuote","author","setAuthor","quotesArray","setQuotesArray","setRandomNumber","accentColor","setAccentColor","fetchQuotes","url","response","fetch","parsedJSON","json","quotes","getQuote","randomInteger","Math","floor","length","random","randomColor","backgroundColor","color","encodeURI"],"sources":["C:/Users/Xavier/Desktop/random-quote-machine/src/App.js"],"sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport {FontAwesomeIcon} from '@fortawesome/fontawesome-svg-core'\nimport {faTwitter} from '@fortawesome/free-brands-svg-icons'\n\n\n\n// Get Quotes from json\nlet quotesDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\n// color array\nvar colors = [\n  '#16a085',\n  '#27ae60',\n  '#2c3e50',\n  '#f39c12',\n  '#e74c3c',\n  '#9b59b6',\n  '#FB6964',\n  '#342224',\n  '#472E32',\n  '#BDBB99',\n  '#77B1A9',\n  '#73A857'\n];\n\n\nfunction App() {\n  \n  // state\n  const [quote, setQuote] = useState(\"If the wind will not serve, take to the oars\")\n  const [author, setAuthor] = useState(\"Latin Proverb\")\n  const [quotesArray,setQuotesArray] = useState(null);\n  const [, setRandomNumber] = useState(0)\n  const [accentColor, setAccentColor] = useState('#282c34')\n\n  // async Function to import Quotes from API\n  const fetchQuotes = async(url) => {\n    const response = await fetch(url)\n    const parsedJSON = await response.json()\n    setQuotesArray(parsedJSON.quotes)\n  }\n\n  useEffect(() => {\n    fetchQuotes(quotesDB)\n  }, [quotesDB])\n\n\n  // Function to generate a random number\n  // set the random Integer to the length of quote array\n  // Determine which quote to show with the position being the randomInteger number\n  const getQuote = (() => {\n    let randomInteger = Math.floor(quotesArray.length*Math.random())\n    let randomColor = Math.floor(colors.length*Math.random())\n    setRandomNumber(randomInteger)\n    setAccentColor(colors[randomColor])\n    setQuote(quotesArray[randomInteger].quote)\n    setAuthor(quotesArray[randomInteger].author)\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor: accentColor}}>\n        {/* Quote box */}\n        <div id=\"quote-box\" style={{color:accentColor}}>\n          {/* Quote text */}\n          <p id=\"text\">\n            \"{quote}\"\n          </p>\n          {/* Author of the quote */}\n          <p id=\"author\">\n            -{author}\n          </p>\n\n          <a id=\"tweet-quote\" href= {encodeURI(`https://twitter.com/intent/tweet?text=${quote}. -${author}`)}>\n            <FontAwesomeIcon></FontAwesomeIcon>\n          </a>\n\n          <button id=\"new-quote\" onClick={() => getQuote()} style={{backgroundColor:accentColor}}>New Quote</button>\n          \n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,SAAQC,eAAR,QAA8B,mCAA9B;AACA,SAAQC,SAAR,QAAwB,oCAAxB,C,CAIA;;;AACA,IAAIC,QAAQ,GAAG,wIAAf,C,CAEA;;AACA,IAAIC,MAAM,GAAG,CACX,SADW,EAEX,SAFW,EAGX,SAHW,EAIX,SAJW,EAKX,SALW,EAMX,SANW,EAOX,SAPW,EAQX,SARW,EASX,SATW,EAUX,SAVW,EAWX,SAXW,EAYX,SAZW,CAAb;;AAgBA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,8CAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,eAAD,CAApC;EACA,MAAM,CAACU,WAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAAC,IAAD,CAA7C;EACA,MAAM,GAAGY,eAAH,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,SAAD,CAA9C,CAPa,CASb;;EACA,MAAMe,WAAW,GAAG,MAAMC,GAAN,IAAc;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;IACAT,cAAc,CAACQ,UAAU,CAACE,MAAZ,CAAd;EACD,CAJD;;EAMAtB,SAAS,CAAC,MAAM;IACdgB,WAAW,CAACZ,QAAD,CAAX;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAhBa,CAqBb;EACA;EACA;;EACA,MAAMmB,QAAQ,GAAI,MAAM;IACtB,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWf,WAAW,CAACgB,MAAZ,GAAmBF,IAAI,CAACG,MAAL,EAA9B,CAApB;IACA,IAAIC,WAAW,GAAGJ,IAAI,CAACC,KAAL,CAAWrB,MAAM,CAACsB,MAAP,GAAcF,IAAI,CAACG,MAAL,EAAzB,CAAlB;IACAf,eAAe,CAACW,aAAD,CAAf;IACAT,cAAc,CAACV,MAAM,CAACwB,WAAD,CAAP,CAAd;IACArB,QAAQ,CAACG,WAAW,CAACa,aAAD,CAAX,CAA2BjB,KAA5B,CAAR;IACAG,SAAS,CAACC,WAAW,CAACa,aAAD,CAAX,CAA2Bf,MAA5B,CAAT;EACD,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,KAAK,EAAE;QAACqB,eAAe,EAAEhB;MAAlB,CAAtC;MAAA,uBAEE;QAAK,EAAE,EAAC,WAAR;QAAoB,KAAK,EAAE;UAACiB,KAAK,EAACjB;QAAP,CAA3B;QAAA,wBAEE;UAAG,EAAE,EAAC,MAAN;UAAA,iBACIP,KADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAAG,EAAE,EAAC,QAAN;UAAA,gBACIE,MADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAUE;UAAG,EAAE,EAAC,aAAN;UAAoB,IAAI,EAAGuB,SAAS,CAAE,yCAAwCzB,KAAM,MAAKE,MAAO,EAA5D,CAApC;UAAA,uBACE,QAAC,eAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAVF,eAcE;UAAQ,EAAE,EAAC,WAAX;UAAuB,OAAO,EAAE,MAAMc,QAAQ,EAA9C;UAAkD,KAAK,EAAE;YAACO,eAAe,EAAChB;UAAjB,CAAzD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA1DQR,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}